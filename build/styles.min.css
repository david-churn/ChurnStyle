/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:spaceranger;src:url(fonts/spaceranger.ttf) format("truetype")}@font-face{font-family:timesans;src:url(fonts/times__.ttf) format("truetype")}*{box-sizing:border-box}header,nav{color:#0f1108;font-family:spaceranger,serif;font-size:1.4em;text-align:center}nav ul{margin:0;padding:0}nav ul li{list-style-type:none;text-align:center;position:relative;top:0;right:0;border:solid 1px #0f1108}nav ul li a{display:block;text-decoration:none;color:#0f1108;background:#f0eff4;border-bottom:solid 1px #0f1108}nav ul.dropdown{display:none;width:100%}nav ul.dropdown li{display:block}nav ul.dropdown li a{border:solid 1px #36494e}nav ul li:hover>ul.dropdown{display:block}body{background:#f0eff4;font-family:timesans,sans-serif;font-size:1.5em;margin:0 1em}h1,h2,h3,h4,h5,h6{font-family:spaceranger,serif;font-weight:400}h2,h3,h4,h5,h6{margin:.5em 0}p{line-height:1.5em}input{max-width:100%}div{margin:.2em 0}blockquote{font-style:italic}table{margin:1em}td,th{margin:1.2em 0;border-bottom:solid 1px #0f1108}th{background:#d1efb5;color:#0f1108}.scrollx{overflow-x:auto}img{border:solid 1px #0f1108;float:left;margin:0 1em}a:hover{background:#fcfc7e}footer{font-family:spaceranger,serif;margin-top:1em;text-align:center;clear:both;border-top:solid 1px #0f1108}button,input[type=button],input[type=rest],input[type=submit]{background:#f0eff4;border:solid 1px #0f1108;border-radius:50%;color:#0f1108;min-height:2em}.tech-btn{background:#d1efb5;color:#0f1108;font-family:spaceranger,serif}.rev-btn{color:#f0eff4;background:#0f1108}.grid_unit:hover,.rev-btn:hover,.tech-btn:hover,button:hover,input[type=button]:hover,input[type=rest]:hover,input[type=submit]:hover{color:#0f1108;background:#fcfc7e}.grid_unit{padding:.5em;background:#d1efb5;color:#0f1108;margin:0 .5em;min-height:1em}form div{margin:.2em}legend{font-family:spaceranger,serif;font-size:1.5em}textarea{max-height:3.5em;line-height:1.5em;padding:.25em;width:80%}.border{border:solid 1px #0f1108}.card{background:#d1efb5;margin:0 1%;padding:.5%;overflow:auto}.center{text-align:center}.greenish{background:#d1efb5}.hidden{background:#be6e46}.italicize{font-style:italic}.logo{border:none;float:none;height:2em;width:auto}.sranger{font-family:spaceranger,serif}.yellowish{background:#fcfc7e}@media (min-width:768px){body{margin:0 5%;font-size:1.2em}h1{font-size:3em}h2{font-size:2.6em}h3{font-size:2.2em}h4{font-size:1.8em}h5{font-size:1.4em}h6{font-size:1em}.row{display:flex;margin:1em 0}.flex1{flex:1}.flex2{flex:2}.flex3{flex:3}.flex4{flex:4}.flex5{flex:5}.flex6{flex:6}.flex7{flex:7}.flex8{flex:8}.flex9{flex:9}.flex10{flex:10}.flex11{flex:11}.flex12{flex:12}nav ul.dropdown{position:absolute}}@media (min-width:1200px){body{max-width:50em;margin:0 15%}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
